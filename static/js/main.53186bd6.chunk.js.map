{"version":3,"sources":["theme.ts","api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx"],"names":["darkTheme","bgColor","textColor","accentColor","cardBgColor","lightTheme","BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","isDark","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","console","log","map","price","x","time_close","y","open","high","low","close","type","series","options","theme","mode","chart","height","background","foreColor","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","xaxis","yaxis","show","Container","styled","div","Overview","main","props","Tag","h3","Value","Text","isPositive","checkValue","value","Price","tickersData","useState","setData","loading","setLoading","useEffect","quotes","USD","toFixed","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Title","h1","Loader","span","Header","header","OverviewItem","Description","p","Tabs","Tab","isActive","Back","BiArrowBack","Coin","useParams","state","useLocation","history","useHistory","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","Helmet","name","onClick","push","rank","symbol","to","description","total_supply","max_supply","path","LoadingContainer","CoinList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","GlobalStyle","createGlobalStyle","ToggleBtn","App","setIsDark","current","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.53186bd6.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#2f3640',\n  textColor: 'white',\n  accentColor: '#9c88ff',\n  cardBgColor: '#535c68',\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  accentColor: '#9c88ff',\n  cardBgColor: 'white',\n};\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n  isDark: boolean;\n}\nfunction Chart({ coinId, isDark }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  console.log(\n    data?.map((price) => {\n      return {\n        x: price.time_close,\n        y: [price.open, price.high, price.low, price.close],\n      };\n    })\n  );\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open, price.high, price.low, price.close],\n              })),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? 'dark' : 'light',\n            },\n\n            chart: {\n              type: 'candlestick',\n              height: 900,\n              background: 'transparent',\n              foreColor: isDark ? 'white' : 'black',\n              animations: {\n                enabled: true,\n                easing: 'easeinout',\n                speed: 800,\n                animateGradually: {\n                  enabled: true,\n                  delay: 150,\n                },\n                dynamicAnimation: {\n                  enabled: true,\n                  speed: 350,\n                },\n              },\n            },\n            xaxis: {\n              type: 'datetime',\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Overview = styled.main`\n  width: 100%;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 15px;\n  margin: 10px 0;\n  padding: 20px;\n`;\n\nconst Tag = styled.h3`\n  width: 50%;\n  color: ${(props) => props.theme.textColor};\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Value = styled.div`\n  width: 50%;\n`;\n\nconst Text = styled.h3<{ isPositive?: Boolean }>`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${(props) => (props.isPositive ? 'lightgreen' : 'red')};\n  text-align: right;\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface PriceProps {\n  coinId: string;\n  tickersData?: PriceData;\n}\nfunction checkValue(value: number | undefined) {\n  if (value) {\n    return value > 0;\n  }\n}\nfunction Price({ coinId, tickersData }: PriceProps) {\n  const [data, setData] = useState<PriceData>();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setData(tickersData);\n    setLoading(false);\n  }, [coinId, tickersData]);\n\n  return (\n    <Container>\n      {loading ? (\n        'Loading Price...'\n      ) : (\n        <>\n          <Overview>\n            <Tag>Price</Tag>\n            <Value>\n              <Text isPositive={true}>\n                $ {data?.quotes.USD.price.toFixed(3)}\n              </Text>\n            </Value>\n          </Overview>\n          <Overview>\n            <Tag>Max Change rate in last 24h</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.market_cap_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.market_cap_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag>Change rate (last 30 Minutes)</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_30m) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_30m} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag>Change rate (last 1 hours)</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_1h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_1h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag>Change rate (last 12 hours)</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_12h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_12h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag>Change rate (last 24 hours)</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport {\n  useLocation,\n  useParams,\n  Switch,\n  Route,\n  useRouteMatch,\n  useHistory,\n} from 'react-router';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport { Helmet } from 'react-helmet';\nimport Price from './Price';\nimport { BiArrowBack } from 'react-icons/bi';\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  font-size: 1.5rem;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.cardBgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n  margin-bottom: 30px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.cardBgColor};\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst Back = styled(BiArrowBack)`\n  position: absolute;\n  left: 0;\n  cursor: pointer;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface IProps {\n  isDark: boolean;\n}\n\nfunction Coin({ isDark }: IProps) {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const history = useHistory();\n\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Back onClick={() => history.push('/')} />\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} tickersData={tickersData} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} isDark={isDark} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LoadingContainer = styled.div`\n  height: 75vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = styled.h1`\n  font-size: larger;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    width: 100%;\n    transition: color 0.25s ease-in;\n    display: flex;\n    align-items: center;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 36px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Img = styled.img`\n  width: 30px;\n  height: 30px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <LoadingContainer>\n          <Loader>Loading...</Loader>\n        </LoadingContainer>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\ninterface IProps {\n  isDark: boolean;\n}\n\nfunction Router({ isDark }: IProps) {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDark={isDark} />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport { BiSun, BiMoon } from 'react-icons/bi';\nimport { useState } from 'react';\nimport Router from './Router';\nimport styled from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n  padding-bottom: 1rem;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nconst ToggleBtn = styled.div`\n  position: fixed;\n  right: 1.5rem;\n  bottom: 1.5rem;\n  cursor: pointer;\n  font-size: 1.5rem;\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleDark = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <ToggleBtn onClick={toggleDark}>\n          {isDark ? <BiMoon /> : <BiSun />}\n        </ToggleBtn>\n        <GlobalStyle />\n        <Router isDark={isDark} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}